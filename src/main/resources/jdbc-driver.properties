#
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

# The Cassandra JDBC Driver version is retrieved from the version defined in the POM file.
driver.version=${project.version}
driver.name=Cassandra JDBC Driver
driver.jdbcVersion=4.0

# The properties supported by the driver.
driver.properties.user=The username used to connect to the database.
driver.properties.password=The password used to connect to the database.
driver.properties.localDatacenter=The local datacenter to use when 'DefaultLoadBalancingPolicy' (used by default) is applied.
driver.properties.debug=Whether the debug mode is enabled.
driver.properties.debug.choices=true,false
driver.properties.consistencyLevel=The consistency level per connection. The consistency level defaults to 'LOCAL_ONE' as defined in the configuration reference if not specified.
driver.properties.activeProfile=The execution profile to use when the connection to Cassandra is created.
driver.properties.fetchSize=The default fetch size for all the queries returning result sets. This value is the number of rows the server will return in each network frame. By default, this value is set to 100.
driver.properties.retry=The custom retry policy to apply. The value must be the full package of the policy's class implementing 'RetryPolicy' interface. By default, the driver will use 'DefaultRetryPolicy'.
driver.properties.loadBalancing=The custom load balancing policy to apply. The value must be the full package of the policy's class implementing 'LoadBalancingPolicy' interface.
driver.properties.reconnection=The custom reconnection policy to apply. By default, the driver will use 'ExponentialReconnectionPolicy'. If you want to use a custom policy, specify the full package of the policy's class. Make sure you always cast the policy's arguments appropriately.
driver.properties.enableSsl=Whether the secured traffic is enabled.
driver.properties.enableSsl.choices=true,false
driver.properties.sslEngineFactory=The SSL engine factory to use. By default, 'DefaultSslEngineFactory' is used. The value must be the fully-qualified name of a class with a no-args constructor implementing 'SslEngineFactory' interface.
driver.properties.hostnameVerification=Whether the validation of the server certificate's common name against the hostname of the server being connected to is enabled. By default, it's enabled if the secured traffic is enabled.
driver.properties.hostnameVerification.choices=true,false
driver.properties.secureConnectBundle=The fully qualified path of the cloud secure connect bundle file used to connect to an AstraDB instance.
driver.properties.useKerberos=Whether the Kerberos auth provider is enabled. By default, it's disabled.
driver.properties.useKerberos.choices=true,false
driver.properties.requestTimeout=A custom timeout for the queries in milliseconds. By default, the timeout for queries is 2 seconds.
driver.properties.connectTimeout=A custom connection timeout in milliseconds. By default, the connection timeout is 5 seconds.
driver.properties.tcpNoDelay=Whether the Nagle's algorithm is enabled. By default, it's enabled.
driver.properties.tcpNoDelay.choices=true,false
driver.properties.keepAlive=Whether the TCP keep-alive is enabled. By default, it's disabled.
driver.properties.keepAlive.choices=true,false
driver.properties.configFile=The Cassandra client configuration file to use.
driver.properties.complianceMode=The compliance mode used when the connection to the database is established.
driver.properties.complianceMode.choices=Default,Liquibase

database.productName=Cassandra
